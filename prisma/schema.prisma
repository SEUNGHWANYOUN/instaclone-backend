// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

//? 필수 값이 아닌경우 사용
//변경될때 마다 prisma studio 사용
model User{
  id        Int @id @default(autoincrement())
  firstName String
  lastName  String?
  username  String @unique
  email     String @unique
  password  String
  bio       String?
  avatar    String?
  photos    Photo[]
  likes     Like[]
  coments   Comment[]
  followers User[] @relation("FollowRelation", references: [id])
  following User[] @relation("FollowRelation", references: [id])
  createAt  DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Photo {
  id        Int @id @default(autoincrement())
  user      User @relation(fields: [userId], references: [id])
  userId    Int
  file      String
  captin    String?
  hashtags  Hashtag[]
  likes     Like[]
  coments   Comment[]
  createAt  DateTime @default(now())
  updateAt  DateTime @updatedAt 
}

model Hashtag {
  id        Int @id @default(autoincrement())
  hashtag   String @unique
  Photos    Photo[]
  createAt  DateTime @default(now())
  updateAt  DateTime @updatedAt     
}

model Like {
    id        Int @id @default(autoincrement())
    photo     Photo @relation(fields: [photoId], references: [id])
    user      User  @relation(fields: [userId], references: [id])
    photoId Int
    userId Int     
    createAt  DateTime @default(now())
    updateAt  DateTime @updatedAt

    @@unique([photoId, userId])
}

model Comment {
    id        Int @id @default(autoincrement())
    user      User  @relation(fields: [userId], references: [id])
    photo     Photo @relation(fields: [photoId], references: [id])
    payload   String
    createAt  DateTime @default(now())
    updateAt  DateTime @updatedAt
    userId Int
    photoId Int
  
}  